{"version":3,"sources":["components/NoteDetail.js/index.js","components/FormLogin/index.js","services/login.js","services/notes.js","components/Notification/index.js","Login.js","components/Toggleable/index.js","components/FormNote/index.js","components/Note/Note.js","hooks/useNotes.js","hooks/useUser.js","Notes.js","App.js","index.js"],"names":["NoteDetail","notes","console","log","noteId","useParams","note","find","id","content","user","name","important","FormLogin","username","password","handleLoginSubmit","onSubmit","placeholder","onClick","prototypes","PropTypes","func","isRequired","string","login","credential","a","axios","post","data","baseUrl","token","get","then","response","newNote","config","headers","Authorization","changedNote","put","newToken","Notification","message","className","useField","type","useState","value","setValue","onChange","event","target","Login","navigate","useNavigate","setUser","errorMessage","setErrorMessage","preventDefault","valueU","valueP","loginService","window","localStorage","setItem","JSON","stringify","noteService","catch","setTimeout","Toggleable","forwardRef","ref","children","buttonLabel","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","displayName","FormNote","addNote","setNewNote","toggleableRef","useRef","current","Note","toggleImportance","props","label","variant","to","textDecoration","useNotes","setNotes","useEffect","noteObject","prevNotes","concat","toggleImportanceOf","n","returnedNote","map","useUser","loggedUserJSON","getItem","parse","logout","removeItem","Notes","error","setError","Home","Users","inlineStyle","padding","App","Islogged","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80d3a6e9.chunk.js","sourcesContent":["\r\nimport { useParams } from 'react-router'\r\n// import notes from '../../services/notes'\r\n\r\nexport const NoteDetail = ({ notes }) => {\r\n  console.log(notes)\r\n  const { noteId } = useParams()\r\n  console.log(noteId)\r\n  const note = notes.find(note => note.id === noteId)\r\n  if (!note) return null\r\n  console.log(note)\r\n  return (\r\n    <div>\r\n      <h2>{note.content}</h2>\r\n      <div>{note?.user?.name}</div>\r\n      <div>\r\n        <strong>\r\n          {note.important ? 'important' : 'not important'}\r\n        </strong>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// import { useState } from \"react\"\r\n\r\n// import Toggleable from '../Toggleable'\r\nimport PropTypes from 'prop-types'\r\n// import { useState } from 'react'\r\n\r\nexport default function FormLogin ({ username, password, handleLoginSubmit, ...props }) {\r\n  return (\r\n  // <Toggleable buttonLabel='Show login'>\r\n    <form onSubmit={handleLoginSubmit}>\r\n      <input\r\n            // type='text'\r\n            // value={username}\r\n            // onChange={props.handleUsernameChange}\r\n        {...username}\r\n        name='Username'\r\n        placeholder='Username'\r\n      />\r\n      <input\r\n            // type='password'\r\n            // value={password}\r\n            // onChange={props.handlePasswordChange}\r\n        {...password}\r\n        name='password'\r\n        placeholder='Password'\r\n      />\r\n\r\n      <button id='form-login-button' onClick={handleLoginSubmit}>\r\n        Login\r\n      </button>\r\n    </form>\r\n  // </Toggleable>\r\n\r\n  )\r\n}\r\n\r\nFormLogin.prototypes = {\r\n  handleLoginSubmit: PropTypes.func.isRequired,\r\n  username: PropTypes.string\r\n\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credential => {\r\n  const { data } = await axios.post(baseUrl, credential)\r\n  return data\r\n}\r\n\r\nexport default { login }\r\n","import axios from 'axios'\r\n// const baseUrl='https://immense-cove-52767.herokuapp.com/api/notes'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `Bearer ${newToken}`\r\n}\r\n\r\nconst getAllNotes = () => {\r\n  return axios.get(baseUrl)\r\n    .then((response) => {\r\n      const { data } = response\r\n      return data\r\n    })\r\n\r\n  // return fetch(baseUrl).then(data => data.json()).then(dataa =>dataa)\r\n\r\n  // https://pokeapi.co/api/v2/pokemon/1/\r\n}\r\n\r\nconst createNote = (newNote) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: token\r\n    }\r\n  }\r\n  return axios.post(baseUrl, newNote, config)\r\n    .then(response => {\r\n      const { data } = response\r\n      return data\r\n    })\r\n}\r\nconst updateNote = (id, changedNote) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: token\r\n    }\r\n  }\r\n  return axios.put(`${baseUrl}/${id}`, changedNote, config)\r\n    .then(response => response.data)\r\n}\r\n\r\nexport default { getAllNotes, createNote, updateNote, setToken }\r\n","const Notification = ({ message }) => {\r\n  return message === null\r\n    ? null\r\n    : <div className='error'>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import { useState } from 'react'\r\nimport FormLogin from './components/FormLogin'\r\nimport loginService from './services/login'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst useField = ({ type }) => {\r\n  const [value, setValue] = useState('')\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n  return {\r\n    type,\r\n    value,\r\n    onChange\r\n  }\r\n}\r\n\r\nexport default function Login () {\r\n  const username = useField({ type: 'text' })\r\n  const password = useField({ type: 'password' })\r\n\r\n  const navigate = useNavigate()\r\n\r\n  // const [username, setUsername] = useState('')\r\n  // const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  // const handleUsernameChange = (event) => {\r\n  //   setUsername(event.target.value)\r\n  // }\r\n  // const handlePasswordChange = (event) => {\r\n  //   setPassword(event.target.value)\r\n  // }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const valueU = username.value\r\n    const valueP = password.value\r\n    loginService.login({\r\n      username: valueU,\r\n      password: valueP\r\n    }).then((user) => {\r\n      console.log('paso aca')\r\n      window.localStorage.setItem(\r\n        'loggedNoteAppUser', JSON.stringify(user)\r\n      )\r\n      noteService.setToken(user.token)\r\n      setUser(user)\r\n      // setUsername('')\r\n      // setPassword('')\r\n      navigate('/notes')\r\n    }).catch(() => {\r\n      setErrorMessage('Wrong credentials')\r\n      // setUsername('')\r\n      // setPassword('')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    })\r\n  }\r\n  if (user) return <h2>user logged</h2>\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} />\r\n\r\n      {/* {if(user) return null} */}\r\n      <FormLogin\r\n        username={username}\r\n        password={password}\r\n        handleLoginSubmit={handleSubmit}\r\n        // handlePasswordChange={handlePasswordChange}\r\n        // handleUsernameChange={handleUsernameChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport { forwardRef, useImperativeHandle, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Toggleable = forwardRef(({ children, buttonLabel }, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n  const toggleVisibility = () => setVisible(!visible)\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button className='todo' onClick={toggleVisibility}>{buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {children}\r\n        <button onClick={toggleVisibility}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\nToggleable.displayName = 'Toggleable' // para forzar el nombre del componente ya que este al encontrase envuelto en forwardRef no es muy instructivo, esto para el proptypes\r\nToggleable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired // se indica que el buttonLabel es una prop requerida de tipo string\r\n}\r\nexport default Toggleable\r\n","import { useRef, useState } from 'react'\r\nimport Toggleable from '../Toggleable'\r\n\r\nexport function FormNote ({ addNote }) {\r\n  const [newNote, setNewNote] = useState('')\r\n  const toggleableRef = useRef()\r\n\r\n  const handleChange = (event) => {\r\n    setNewNote(event.target.value)\r\n    // const newNote = event.target.value\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      important: false\r\n    }\r\n    addNote(noteObject)\r\n    setNewNote('')\r\n    toggleableRef.current.toggleVisibility()\r\n  }\r\n  return (\r\n    <Toggleable buttonLabel='New Note' ref={toggleableRef}>\r\n      <h3>Create a new note</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type='text'\r\n          onChange={handleChange}\r\n          value={newNote}\r\n          placeholder='Write your note content'\r\n        />\r\n        <button>Crear nota</button>\r\n      </form>\r\n    </Toggleable>\r\n  )\r\n}\r\n","import { Link } from 'react-router-dom'\r\n\r\nexport default function Note ({ content, important, toggleImportance, ...props }) {\r\n  const label = important\r\n    ? 'make not important'\r\n    : 'make important'\r\n  const variant = important\r\n    ? 'secondary'\r\n    : 'primary'\r\n  return (\r\n    <li>\r\n\r\n      <Link to={`/notes/${props.id}`} style={{ textDecoration: 'none' }}>{content}</Link>\r\n      {/* <small><strong>{String(important)}</strong></small> */}\r\n\r\n      <button onClick={toggleImportance} variant={variant}>{label}</button>\r\n\r\n    </li>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport noteService from '../services/notes'\r\nexport const useNotes = () => {\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAllNotes().then((data) => {\r\n      // console.log(data)\r\n        setNotes(data)\r\n        // setLoading(false)\r\n      })\r\n  }, [])\r\n  const addNote = (noteObject) => {\r\n    // const {token} = user\r\n    return noteService\r\n      .createNote(noteObject)\r\n      .then((data) => {\r\n        setNotes(prevNotes => prevNotes.concat(data))\r\n        // setNewNote('')\r\n      })\r\n  }\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    return noteService\r\n      .updateNote(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n    // console.log(changedNote)\r\n  }\r\n  return {\r\n    notes,\r\n    addNote,\r\n    setNotes,\r\n    toggleImportanceOf\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport noteService from '../services/notes.js'\r\nimport loginService from '../services/login.js'\r\nexport const useUser = () => {\r\n  const [user, setUser] = useState(null)\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n  const logout = () => {\r\n    window.localStorage.removeItem('loggedNoteAppUser')\r\n    setUser(null)\r\n    noteService.setToken(user.token)\r\n  }\r\n  const login = ({ username, password }) => {\r\n    return loginService.login({\r\n      username,\r\n      password\r\n    }).then((user) => {\r\n      window.localStorage.setItem(\r\n        'loggedNoteAppUser', JSON.stringify(user)\r\n      )\r\n      noteService.setToken(user.token)\r\n      setUser(user) // del custom hook\r\n    })\r\n  }\r\n  return {\r\n    user,\r\n    logout,\r\n    login\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport Notification from './components/Notification'\r\nimport { FormNote } from './components/FormNote'\r\n\r\nimport Note from './components/Note/Note'\r\n// import noteService from './services/notes'\r\n// import loginService from './services/login'\r\n\r\n// import './estilos.css'\r\nimport './index.css'\r\n// import FormLogin from './components/FormLogin'\r\nimport { useNotes } from './hooks/useNotes'\r\nimport { useUser } from './hooks/useUser'\r\nimport Login from './Login'\r\n// import Toggleable from './components/Toggleable'\r\n// import { Table } from 'react-bootstrap'\r\n\r\nconst Notes = () => {\r\n  const { notes, addNote, toggleImportanceOf } = useNotes()\r\n  const { user, logout } = useUser()\r\n  // const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  // const [username, setUsername] = useState('')\r\n  // const [password, setPassword] = useState('')\r\n\r\n  // const handleLoginSubmit = (event) => {\r\n  //   event.preventDefault()\r\n  //   login({ username, password }) // del hook useUser\r\n  //     .then(() => {\r\n  //       setUsername('')\r\n  //       setPassword('')\r\n  //     }).catch(() => {\r\n  //       setError('Wrong credentials')\r\n  //       setUsername('')\r\n  //       setPassword('')\r\n  //       setTimeout(() => {\r\n  //         setError(null)\r\n  //       }, 5000)\r\n  //     })\r\n  // }\r\n\r\n  const toggleImportanceOfNote = (id) => {\r\n    toggleImportanceOf(id)\r\n      .catch(() => {\r\n        setError('Note was already removed from server')\r\n      })\r\n  }\r\n  const addNotee = (noteObject) => {\r\n    addNote(noteObject)\r\n      .catch(error => {\r\n        console.error(error)\r\n        setError('La API fallo')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n\r\n      <Notification message={error} />\r\n      {\r\n        user\r\n          ? <button onClick={logout}>Logout</button>\r\n          : null\r\n      }\r\n      {\r\n        user\r\n          ? <FormNote addNote={addNotee} />\r\n          : <Login />\r\n      }\r\n\r\n      <ol>\r\n\r\n        {notes.map(note => (\r\n\r\n          <Note key={note.id} toggleImportance={() => toggleImportanceOfNote(note.id)} {...note} />\r\n\r\n        ))}\r\n\r\n      </ol>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes\r\n","// import { useState } from 'react'\n// import { useEffect, useState } from 'react'\nimport { Link, BrowserRouter, Route, Routes, Navigate } from 'react-router-dom'\n// import FormLogin from './components/FormLogin/index.js'\nimport { NoteDetail } from './components/NoteDetail.js'\nimport Login from './Login.js'\nimport Notes from './Notes'\n// import noteService from './services/notes'\nimport { useUser } from './hooks/useUser'\nimport { useNotes } from './hooks/useNotes'\n\nconst Home = () => <h1>Home Page</h1>\n\nconst Users = () => <h1>Users</h1>\n\nconst inlineStyle = {\n  padding: 5\n\n}\n\nconst App = () => {\n  const { user } = useUser()\n  const { notes } = useNotes()\n\n  const Islogged = () => {\n    return user ? <Navigate to='/' /> : <Login />\n  }\n  return (\n    <BrowserRouter>\n      <div className='container'>\n\n        <Link to='/' style={inlineStyle}>Home</Link>\n\n        <Link to='/notes' style={inlineStyle}>Notes</Link>\n\n        <Link to='/users' style={inlineStyle}>Users</Link>\n\n        {\n                  user\n                    ? <em>Logged as {user.name}</em>\n                    : (\n                      <Link to='/login' style={inlineStyle}>\n                        Login\n                      </Link>\n                      )\n                }\n\n        <Routes>\n          <Route path='/notes/:noteId' element={<NoteDetail notes={notes} />} />\n          <Route path='/' element={<Home />} />\n          <Route\n            path='/notes' element={<Notes />}\n          />\n          <Route path='/users' element={<Users />} />\n          <Route\n            path='/login' element={<Islogged />}\n          />\n          <Route path='/*' element={<h1>no disponible</h1>} />\n        </Routes>\n      </div>\n\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}