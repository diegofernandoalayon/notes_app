{"version":3,"sources":["components/Notification/index.js","components/Toggleable/index.js","components/FormNote/index.js","components/Note/Note.js","services/notes.js","services/login.js","components/FormLogin/index.js","App.js","index.js"],"names":["Notification","message","className","Toggleable","forwardRef","ref","children","buttonLabel","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","displayName","FormNote","addNote","newNote","setNewNote","toggleableRef","useRef","onSubmit","event","preventDefault","content","important","current","type","onChange","target","value","placeholder","Note","toggleImportance","label","String","baseUrl","token","axios","get","then","response","data","config","headers","Authorization","post","id","changedNote","put","newToken","login","credential","a","FormLogin","username","password","handleLoginSubmit","props","name","handleUsernameChange","handlePasswordChange","prototypes","PropTypes","func","isRequired","string","App","notes","setNotes","loading","setLoading","error","setError","setUsername","setPassword","user","setUser","useEffect","noteService","loggedUserJSON","window","localStorage","getItem","JSON","parse","removeItem","noteObject","prevNotes","concat","catch","console","loginService","setItem","stringify","setTimeout","map","note","find","n","returnedNote","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fca9425.chunk.js","sourcesContent":["const Notification = ({ message }) => {\r\n  return message === null\r\n    ? null\r\n    : <div className='error'>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","\r\nimport { forwardRef, useImperativeHandle, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Toggleable = forwardRef(({ children, buttonLabel }, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n  const toggleVisibility = () => setVisible(!visible)\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button className='todo' onClick={toggleVisibility}>{buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {children}\r\n        <button onClick={toggleVisibility}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\nToggleable.displayName = 'Toggleable' // para forzar el nombre del componente ya que este al encontrase envuelto en forwardRef no es muy instructivo, esto para el proptypes\r\nToggleable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired // se indica que el buttonLabel es una prop requerida de tipo string\r\n}\r\nexport default Toggleable\r\n","import { useRef, useState } from 'react'\r\nimport Toggleable from '../Toggleable'\r\n\r\nexport function FormNote ({ addNote }) {\r\n  const [newNote, setNewNote] = useState('')\r\n  const toggleableRef = useRef()\r\n\r\n  const handleChange = (event) => {\r\n    setNewNote(event.target.value)\r\n    // const newNote = event.target.value\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      important: false\r\n    }\r\n    addNote(noteObject)\r\n    setNewNote('')\r\n    toggleableRef.current.toggleVisibility()\r\n  }\r\n  return (\r\n    <Toggleable buttonLabel='New Note' ref={toggleableRef}>\r\n      <h3>Create a new note</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type='text'\r\n          onChange={handleChange}\r\n          value={newNote}\r\n          placeholder='Write your note content'\r\n        />\r\n        <button>Crear nota</button>\r\n      </form>\r\n    </Toggleable>\r\n  )\r\n}\r\n","\r\nexport default function Note ({ content, important, toggleImportance, ...props }) {\r\n  const label = important\r\n    ? 'make not important'\r\n    : 'make important'\r\n  return (\r\n    <li>\r\n      <p><strong>{content}</strong></p>\r\n      <small><strong>{String(important)}</strong></small>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n// const baseUrl='https://immense-cove-52767.herokuapp.com/api/notes'\r\nconst baseUrl = 'http://localhost:3001/api/notes'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `Bearer ${newToken}`\r\n}\r\n\r\nconst getAllNotes = () => {\r\n  return axios.get(baseUrl)\r\n    .then((response) => {\r\n      const { data } = response\r\n      return data\r\n    })\r\n\r\n  // return fetch(baseUrl).then(data => data.json()).then(dataa =>dataa)\r\n\r\n  // https://pokeapi.co/api/v2/pokemon/1/\r\n}\r\n\r\nconst createNote = (newNote) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: token\r\n    }\r\n  }\r\n  return axios.post(baseUrl, newNote, config)\r\n    .then(response => {\r\n      const { data } = response\r\n      return data\r\n    })\r\n}\r\nconst updateNote = (id, changedNote) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: token\r\n    }\r\n  }\r\n  return axios.put(`${baseUrl}/${id}`, changedNote, config)\r\n    .then(response => response.data)\r\n}\r\n\r\nexport default { getAllNotes, createNote, updateNote, setToken }\r\n","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/login'\r\n\r\nconst login = async credential => {\r\n  const { data } = await axios.post(baseUrl, credential)\r\n  return data\r\n}\r\n\r\nexport default { login }\r\n","// import { useState } from \"react\"\r\n\r\nimport Toggleable from '../Toggleable'\r\nimport PropTypes from 'prop-types'\r\nexport default function FormLogin ({ username, password, handleLoginSubmit, ...props }) {\r\n  return (\r\n    <Toggleable buttonLabel='Show login'>\r\n      <form onSubmit={handleLoginSubmit}>\r\n        <div>\r\n          <input\r\n            type='text'\r\n            value={username}\r\n            name='Username'\r\n            placeholder='Username'\r\n            onChange={props.handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type='password'\r\n            value={password}\r\n            name='password'\r\n            placeholder='Password'\r\n            onChange={props.handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button id='form-login-button'>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </Toggleable>\r\n\r\n  )\r\n}\r\n\r\nFormLogin.prototypes = {\r\n  handleLoginSubmit: PropTypes.func.isRequired,\r\n  username: PropTypes.string\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\nimport Notification from './components/Notification'\nimport { FormNote } from './components/FormNote'\n\nimport Note from './components/Note/Note'\nimport noteService from './services/notes'\nimport loginService from './services/login'\n\n// import './estilos.css'\nimport './index.css'\nimport FormLogin from './components/FormLogin'\n// import Toggleable from './components/Toggleable'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    setLoading(true)\n\n    noteService\n      .getAllNotes().then((data) => {\n      // console.log(data)\n        setNotes(data)\n        setLoading(false)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const addNote = (noteObject) => {\n    // const {token} = user\n    noteService\n      .createNote(noteObject)\n      .then((data) => {\n        setNotes(prevNotes => prevNotes.concat(data))\n        // setNewNote('')\n      }).catch(error => {\n        console.error(error)\n        setError('La API fallo')\n      })\n  }\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .updateNote(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n    // console.log(changedNote)\n  }\n  const handleLoginSubmit = (event) => {\n    event.preventDefault()\n    loginService.login({\n      username,\n      password\n    }).then((user) => {\n      window.localStorage.setItem(\n        'loggedNoteAppUser', JSON.stringify(user)\n      )\n\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    }).catch(() => {\n      setError('Wrong credentials')\n      setUsername('')\n      setPassword('')\n      setTimeout(() => {\n        setError(null)\n      }, 5000)\n    })\n  }\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedNoteAppUser')\n    setUser(null)\n    noteService.setToken(user.token)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      {loading ? 'cargando...' : ''}\n      {/* {error ? error:''} */}\n      <Notification message={error} />\n      {\n        user\n          ? <button onClick={handleLogout}>Logout</button>\n          : null\n      }\n      {\n        user\n          ? <FormNote addNote={addNote} />\n          : <FormLogin\n              username={username}\n              password={password}\n              handleLoginSubmit={handleLoginSubmit}\n              handleUsernameChange={({ target }) => setUsername(target.value)}\n              handlePasswordChange={({ target }) => setPassword(target.value)}\n            />\n      }\n\n      <ol>\n        {notes.map(note => (\n          <Note key={note.id} toggleImportance={() => toggleImportanceOf(note.id)} {...note} />\n        ))}\n      </ol>\n\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}