{"version":3,"sources":["components/NoteDetail.js/index.js","components/Toggleable/index.js","components/FormLogin/index.js","services/login.js","services/notes.js","components/Notification/index.js","Login.js","components/FormNote/index.js","components/Note/Note.js","hooks/useNotes.js","Notes.js","App.js","hooks/useUser.js","index.js"],"names":["NoteDetail","notes","console","log","noteId","useParams","note","find","id","content","user","name","important","Toggleable","forwardRef","ref","children","buttonLabel","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","className","onClick","displayName","FormLogin","username","password","handleLoginSubmit","props","onSubmit","type","value","placeholder","onChange","handleUsernameChange","handlePasswordChange","prototypes","PropTypes","func","isRequired","string","login","credential","a","axios","post","data","baseUrl","token","get","then","response","newNote","config","headers","Authorization","changedNote","put","newToken","Notification","message","Login","navigate","useNavigate","setUsername","setPassword","setUser","errorMessage","setErrorMessage","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","noteService","catch","setTimeout","target","FormNote","addNote","setNewNote","toggleableRef","useRef","current","Note","toggleImportance","label","to","String","useNotes","setNotes","useEffect","noteObject","prevNotes","concat","toggleImportanceOf","n","returnedNote","map","Notes","error","setError","loggedUserJSON","getItem","parse","removeItem","Home","Users","inlineStyle","padding","App","useUser","Islogged","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51234f2c.chunk.js","sourcesContent":["\r\nimport { useParams } from 'react-router'\r\n// import notes from '../../services/notes'\r\n\r\nexport const NoteDetail = ({ notes }) => {\r\n  console.log(notes)\r\n  const { noteId } = useParams()\r\n  console.log(noteId)\r\n  const note = notes.find(note => note.id === noteId)\r\n  if (!note) return null\r\n  console.log(note)\r\n  return (\r\n    <div>\r\n      <h2>{note.content}</h2>\r\n      <div>{note?.user?.name}</div>\r\n      <div>\r\n        <strong>\r\n          {note.important ? 'important' : 'not important'}\r\n        </strong>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport { forwardRef, useImperativeHandle, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Toggleable = forwardRef(({ children, buttonLabel }, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n  const toggleVisibility = () => setVisible(!visible)\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button className='todo' onClick={toggleVisibility}>{buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {children}\r\n        <button onClick={toggleVisibility}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\nToggleable.displayName = 'Toggleable' // para forzar el nombre del componente ya que este al encontrase envuelto en forwardRef no es muy instructivo, esto para el proptypes\r\nToggleable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired // se indica que el buttonLabel es una prop requerida de tipo string\r\n}\r\nexport default Toggleable\r\n","// import { useState } from \"react\"\r\n\r\nimport Toggleable from '../Toggleable'\r\nimport PropTypes from 'prop-types'\r\n// import { useState } from 'react'\r\nexport default function FormLogin ({ username, password, handleLoginSubmit, ...props }) {\r\n  return (\r\n    <Toggleable buttonLabel='Show login'>\r\n      <form onSubmit={handleLoginSubmit}>\r\n        <div>\r\n          <input\r\n            type='text'\r\n            value={username}\r\n            name='Username'\r\n            placeholder='Username'\r\n            onChange={props.handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type='password'\r\n            value={password}\r\n            name='password'\r\n            placeholder='Password'\r\n            onChange={props.handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button id='form-login-button'>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </Toggleable>\r\n\r\n  )\r\n}\r\n\r\nFormLogin.prototypes = {\r\n  handleLoginSubmit: PropTypes.func.isRequired,\r\n  username: PropTypes.string\r\n\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credential => {\r\n  const { data } = await axios.post(baseUrl, credential)\r\n  return data\r\n}\r\n\r\nexport default { login }\r\n","import axios from 'axios'\r\n// const baseUrl='https://immense-cove-52767.herokuapp.com/api/notes'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `Bearer ${newToken}`\r\n}\r\n\r\nconst getAllNotes = () => {\r\n  return axios.get(baseUrl)\r\n    .then((response) => {\r\n      const { data } = response\r\n      return data\r\n    })\r\n\r\n  // return fetch(baseUrl).then(data => data.json()).then(dataa =>dataa)\r\n\r\n  // https://pokeapi.co/api/v2/pokemon/1/\r\n}\r\n\r\nconst createNote = (newNote) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: token\r\n    }\r\n  }\r\n  return axios.post(baseUrl, newNote, config)\r\n    .then(response => {\r\n      const { data } = response\r\n      return data\r\n    })\r\n}\r\nconst updateNote = (id, changedNote) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: token\r\n    }\r\n  }\r\n  return axios.put(`${baseUrl}/${id}`, changedNote, config)\r\n    .then(response => response.data)\r\n}\r\n\r\nexport default { getAllNotes, createNote, updateNote, setToken }\r\n","const Notification = ({ message }) => {\r\n  return message === null\r\n    ? null\r\n    : <div className='error'>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import { useState } from 'react'\r\nimport FormLogin from './components/FormLogin'\r\nimport loginService from './services/login'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function Login () {\r\n  const navigate = useNavigate()\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  console.log(user)\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value)\r\n  }\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value)\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    loginService.login({\r\n      username,\r\n      password\r\n    }).then((user) => {\r\n      window.localStorage.setItem(\r\n        'loggedNoteAppUser', JSON.stringify(user)\r\n      )\r\n      noteService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n      navigate('/notes')\r\n    }).catch(() => {\r\n      setErrorMessage('Wrong credentials')\r\n      setUsername('')\r\n      setPassword('')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    })\r\n  }\r\n  if (user) return <h2>user logged</h2>\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} />\r\n\r\n      {/* {if(user) return null} */}\r\n      <FormLogin\r\n        username={username}\r\n        password={password}\r\n        handleLoginSubmit={handleSubmit}\r\n        handlePasswordChange={handlePasswordChange}\r\n        handleUsernameChange={handleUsernameChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { useRef, useState } from 'react'\r\nimport Toggleable from '../Toggleable'\r\n\r\nexport function FormNote ({ addNote }) {\r\n  const [newNote, setNewNote] = useState('')\r\n  const toggleableRef = useRef()\r\n\r\n  const handleChange = (event) => {\r\n    setNewNote(event.target.value)\r\n    // const newNote = event.target.value\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      important: false\r\n    }\r\n    addNote(noteObject)\r\n    setNewNote('')\r\n    toggleableRef.current.toggleVisibility()\r\n  }\r\n  return (\r\n    <Toggleable buttonLabel='New Note' ref={toggleableRef}>\r\n      <h3>Create a new note</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type='text'\r\n          onChange={handleChange}\r\n          value={newNote}\r\n          placeholder='Write your note content'\r\n        />\r\n        <button>Crear nota</button>\r\n      </form>\r\n    </Toggleable>\r\n  )\r\n}\r\n","import { Link } from 'react-router-dom'\r\n\r\nexport default function Note ({ content, important, toggleImportance, ...props }) {\r\n  const label = important\r\n    ? 'make not important'\r\n    : 'make important'\r\n  return (\r\n    <li>\r\n      <Link to={`/notes/${props.id}`}>{content}</Link>\r\n      <small><strong>{String(important)}</strong></small>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport noteService from '../services/notes'\r\nexport const useNotes = () => {\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAllNotes().then((data) => {\r\n      // console.log(data)\r\n        setNotes(data)\r\n        // setLoading(false)\r\n      })\r\n  }, [])\r\n  const addNote = (noteObject) => {\r\n    // const {token} = user\r\n    return noteService\r\n      .createNote(noteObject)\r\n      .then((data) => {\r\n        setNotes(prevNotes => prevNotes.concat(data))\r\n        // setNewNote('')\r\n      })\r\n  }\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    return noteService\r\n      .updateNote(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n    // console.log(changedNote)\r\n  }\r\n  return {\r\n    notes,\r\n    addNote,\r\n    setNotes,\r\n    toggleImportanceOf\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Notification from './components/Notification'\r\nimport { FormNote } from './components/FormNote'\r\n\r\nimport Note from './components/Note/Note'\r\nimport noteService from './services/notes'\r\nimport loginService from './services/login'\r\n\r\n// import './estilos.css'\r\nimport './index.css'\r\nimport FormLogin from './components/FormLogin'\r\nimport { useNotes } from './hooks/useNotes'\r\n// import Toggleable from './components/Toggleable'\r\n\r\nconst Notes = () => {\r\n  const { notes, addNote, toggleImportanceOf } = useNotes()\r\n  // const [notes, setNotes] = useState([])\r\n  // const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n  // useEffect(() => {\r\n  //   setLoading(true)\r\n\r\n  //   noteService\r\n  //     .getAllNotes().then((data) => {\r\n  //     // console.log(data)\r\n  //       setNotes(data)\r\n  //       setLoading(false)\r\n  //     })\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLoginSubmit = (event) => {\r\n    event.preventDefault()\r\n    loginService.login({\r\n      username,\r\n      password\r\n    }).then((user) => {\r\n      window.localStorage.setItem(\r\n        'loggedNoteAppUser', JSON.stringify(user)\r\n      )\r\n\r\n      noteService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    }).catch(() => {\r\n      setError('Wrong credentials')\r\n      setUsername('')\r\n      setPassword('')\r\n      setTimeout(() => {\r\n        setError(null)\r\n      }, 5000)\r\n    })\r\n  }\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedNoteAppUser')\r\n    setUser(null)\r\n    noteService.setToken(user.token)\r\n  }\r\n  const toggleImportanceOfNote = (id) => {\r\n    toggleImportanceOf(id)\r\n      .catch(() => {\r\n        setError('Note \\'a\\' was already removed from server')\r\n      })\r\n  }\r\n  const addNotee = (noteObject) => {\r\n    addNote(noteObject)\r\n      .catch(error => {\r\n        console.error(error)\r\n        setError('La API fallo')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n\r\n      <Notification message={error} />\r\n      {\r\n        user\r\n          ? <button onClick={handleLogout}>Logout</button>\r\n          : null\r\n      }\r\n      {\r\n        user\r\n          ? <FormNote addNote={addNotee} />\r\n          : <FormLogin\r\n              username={username}\r\n              password={password}\r\n              handleLoginSubmit={handleLoginSubmit}\r\n              handleUsernameChange={({ target }) => setUsername(target.value)}\r\n              handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            />\r\n      }\r\n\r\n      <ol>\r\n        {notes.map(note => (\r\n          <Note key={note.id} toggleImportance={() => toggleImportanceOfNote(note.id)} {...note} />\r\n        ))}\r\n      </ol>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes\r\n","// import { useState } from 'react'\n// import { useEffect, useState } from 'react'\nimport { Link, BrowserRouter, Route, Routes, Navigate } from 'react-router-dom'\n// import FormLogin from './components/FormLogin/index.js'\nimport { NoteDetail } from './components/NoteDetail.js'\nimport Login from './Login.js'\nimport Notes from './Notes'\n// import noteService from './services/notes'\nimport { useUser } from './hooks/useUser'\nimport { useNotes } from './hooks/useNotes'\n\nconst Home = () => <h1>Home Page</h1>\n\nconst Users = () => <h1>Users</h1>\n\nconst inlineStyle = {\n  padding: 5\n\n}\n\nconst App = () => {\n  const { user } = useUser()\n  const { notes } = useNotes()\n\n  const Islogged = () => {\n    return user ? <Navigate to='/' /> : <Login />\n  }\n  return (\n    <BrowserRouter>\n\n      <header>\n\n        <Link to='/' style={inlineStyle}>Home</Link>\n        <Link to='/notes' style={inlineStyle}>Notes</Link>\n        <Link to='/users' style={inlineStyle}>Users</Link>\n\n        {\n          user\n            ? <em>Logged as {user.name}</em>\n            : (\n              <Link to='/login' style={inlineStyle}>\n                Login\n              </Link>\n              )\n        }\n      </header>\n\n      <Routes>\n        <Route path='/notes/:noteId' element={<NoteDetail notes={notes} />} />\n        <Route path='/' element={<Home />} />\n        <Route\n          path='/notes' element={<Notes />}\n        />\n        <Route path='/users' element={<Users />} />\n        <Route\n          path='/login' element={<Islogged />}\n\n        />\n        <Route path='/*' element={<h1>no disponible</h1>} />\n      </Routes>\n\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { useEffect, useState } from 'react'\r\nimport noteService from '../services/notes'\r\nexport const useUser = () => {\r\n  const [user, setUser] = useState(null)\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  return {\r\n    user\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}